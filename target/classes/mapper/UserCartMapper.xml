<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

    <mapper namespace="com.xm.dao.UserCartMapper">
        <!--商品添加到用户购物车-->
        <insert id="addCart">
            INSERT INTO tb_user_cart(user_name,p_id,p_num,user_address,p_img,p_brand_describe,p_price) VALUES (#{userName} , #{pId} , #{pNum} , #{userAddress},#{pImg},#{pBrandDescribe},#{pPrice})
        </insert>

        <!--商品添加到用户购物车-->
        <select id="existProductIdByUserName" resultType="int">
            SELECT count(*) FROM tb_user_cart WHERE user_name=#{userName} AND p_id=#{pId}
        </select>

        <!--查询用户购物车中某一id商品的数量-->
        <select id="productNum" resultType="int">
            select p_num from tb_user_cart WHERE user_name=#{userName} AND p_id=#{pId}
        </select>

        <!--更新某一商品的数量-->
        <update id="updateProductNum">
            UPDATE tb_user_cart SET p_num=#{pNum} WHERE user_name=#{userName} AND p_id=#{pId}
        </update>

        <!--根据用户名查询此用户购物车-->
        <select id="queryTheShoppingCartOfThisUserAccordingToTheUserName" resultType="com.xm.bean.UserCart">
            select * from tb_user_cart where user_name=#{userName}
        </select>

        <!--删除购物车中单个商品根据用户名和此商品id-->
        <delete id="singleDelete">
            DELETE FROM tb_user_cart WHERE user_name=#{userName} AND p_id=#{pId}
        </delete>

        <!--删除购物车中多个商品根据用户名和此商品的id-->
        <delete id="selectDelete">
            DELETE FROM tb_user_cart WHERE user_name=#{userName} AND p_id in
                <foreach collection="pIds" item="ids_item" separator="," open="(" close=")">
                    #{ids_item}
                </foreach>
        </delete>

        <!--product表中根据id删除此id的数量-->
        <update id="selectProductDeleteNumById">
            UPDATE tb_product SET p_num=p_num-#{nums} WHERE id=#{id}
        </update>

        <!--订单信息存放到订单表-->
        <insert id="insertOrderInfo" parameterType="java.util.List">
            insert into tb_order_item (order_id,user_name,id,p_price,p_img,p_num,user_address,p_brand_describe) values
                <foreach collection="orderItemList" item="items" index="index" separator="," >
                    (
                    #{items.orderId},
                    #{items.userName},
                    #{items.id},
                    #{items.pPrice},
                    #{items.pImg},
                    #{items.pNum},
                    #{items.userAddress},
                    #{items.pBrandDescribe}
                    )
                </foreach>
        </insert>


    </mapper>
